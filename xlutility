package utils;

import org.apache.poi.ss.usermodel.*;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.testng.annotations.DataProvider;

import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;

public class XLUtility {

    private static String filePath = "testdata.xlsx";

    // Read cell value
    public static String getCellData(String sheetName, int rowNum, int colNum) throws IOException {
        FileInputStream fis = new FileInputStream(filePath);
        Workbook wb = new XSSFWorkbook(fis);
        Sheet sheet = wb.getSheet(sheetName);

        Row row = sheet.getRow(rowNum);
        Cell cell = row.getCell(colNum);

        String data = "";
        if (cell != null) {
            cell.setCellType(CellType.STRING);
            data = cell.getStringCellValue();
        }

        wb.close();
        fis.close();
        return data;
    }

    // Write cell value
    public static void setCellData(String sheetName, int rowNum, int colNum, String value) throws IOException {
        FileInputStream fis = new FileInputStream(filePath);
        Workbook wb = new XSSFWorkbook(fis);
        fis.close();

        Sheet sheet = wb.getSheet(sheetName);
        Row row = sheet.getRow(rowNum);
        if (row == null) row = sheet.createRow(rowNum);

        Cell cell = row.getCell(colNum);
        if (cell == null) cell = row.createCell(colNum);

        cell.setCellValue(value);

        FileOutputStream fos = new FileOutputStream(filePath);
        wb.write(fos);
        wb.close();
        fos.close();
    }

    // Get row count
    private static int getRowCount(String sheetName) throws IOException {
        FileInputStream fis = new FileInputStream(filePath);
        Workbook wb = new XSSFWorkbook(fis);
        Sheet sheet = wb.getSheet(sheetName);
        int rowCount = sheet.getLastRowNum();
        wb.close();
        fis.close();
        return rowCount;
    }

    // DataProvider for Register API
    @DataProvider(name = "getRegisterData")
    public static Object[][] getRegisterData() throws Exception {
        String sheetName = "Tests";
        int rowCount = getRowCount(sheetName);

        int dataCols = 7; // A-G columns
        Object[][] data = new Object[rowCount][dataCols + 1]; // +1 for rowIndex

        for (int i = 1; i <= rowCount; i++) {
            String testType = getCellData(sheetName, i, 0);
            if (testType.equalsIgnoreCase("Register")) {
                for (int j = 0; j < dataCols; j++) {
                    data[i - 1][j] = getCellData(sheetName, i, j);
                }
                data[i - 1][dataCols] = i; // rowIndex
            }
        }
        return data;
    }

    // DataProvider for GetAllUsers API
    @DataProvider(name = "getAllUsersData")
    public static Object[][] getAllUsersData() throws Exception {
        String sheetName = "Tests";
        int rowCount = getRowCount(sheetName);

        int dataCols = 7; // A-G columns
        Object[][] data = new Object[rowCount][dataCols + 1];

        for (int i = 1; i <= rowCount; i++) {
            String testType = getCellData(sheetName, i, 0);
            if (testType.equalsIgnoreCase("GetAllUsers")) {
                for (int j = 0; j < dataCols; j++) {
                    data[i - 1][j] = getCellData(sheetName, i, j);
                }
                data[i - 1][dataCols] = i; // rowIndex
            }
        }
        return data;
    }
}
